"""
3. Создайте собственный класс-исключение, который должен проверять содержимое
   списка на наличие только чисел. Проверить работу исключения на
   реальном примере. Запрашивать у пользователя данные и заполнять список
   необходимо только числами. Класс-исключение должен контролировать
   типы данных элементов списка.

   Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
   пока пользователь сам не остановит работу скрипта, введя, например,
   команду «stop». При этом скрипт завершается, сформированный список
   с числами выводится на экран.
   Подсказка: для этого задания примем, что пользователь может вводить только
   числа и строки. Во время ввода пользователем очередного элемента необходимо
   реализовать проверку типа элемента. Вносить его в список, только
   если введено число. Класс-исключение должен не позволить пользователю
   ввести текст (не число) и отобразить соответствующее сообщение.
   При этом работа скрипта не должна завершаться.
"""


class NumErr(Exception):
    def __init__(self):
        self.txt = "Введены не некорректные данные!"


my_list = []
my_str = ""
while not (my_str == 'stop'):
    my_str = input("Введите целое число. Для остановки введите команду 'stop': ")
    try:
        if my_str.isdigit():
            my_list.append(int(my_str))
        elif my_str == 'stop':
            pass
        else:
            raise NumErr
    except NumErr as err:
        print(err.txt)

print(my_list)
